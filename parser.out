Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ABSTRACT
    ARRAY
    AS
    BREAK
    CALLABLE
    CASE
    CATCH
    CLASS
    CLONE
    CLOSE_SQUARE_BRACKET
    CLOSE_TAG
    COLON
    COMMENT
    CONST
    CONTINUE
    DECLARE
    DEFAULT
    DIE
    DO
    DOUBLE_COLON
    ELSE
    ELSEIF
    EMPTY
    ENDDECLARE
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDSWITCH
    ENDWHILE
    EVAL
    EXIT
    EXTENDS
    FINAL
    FINALLY
    FOR
    OPEN_SQUARE_BRACKET
    OPEN_TAG
    OPEN_TAG_WITH_ECHO
    RETURN
    WHITESPACE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     program -> condition
Rule 3     statement_list -> statement
Rule 4     statement_list -> statement_list statement
Rule 5     statement -> expression_statement
Rule 6     statement -> function_declaration
Rule 7     statement -> assignment
Rule 8     statement -> if_statement
Rule 9     statement -> impresion
Rule 10    assignment -> VARIABLE EQUALS expression SEMICOLON
Rule 11    expression_statement -> expression SEMICOLON
Rule 12    function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list
Rule 13    body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET
Rule 14    body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET
Rule 15    parameter_list -> parameter
Rule 16    parameter_list -> parameter_list COMMA parameter
Rule 17    parameter_list -> empty
Rule 18    parameter -> VARIABLE
Rule 19    value_parameter_list -> value_parameter
Rule 20    value_parameter_list -> value_parameter_list COMMA value_parameter
Rule 21    value_parameter_list -> empty
Rule 22    value_parameter -> expression
Rule 23    empty -> <empty>
Rule 24    expression -> VARIABLE
Rule 25    expression -> NUMBER
Rule 26    expression -> STRING
Rule 27    expression -> BOOLEAN
Rule 28    expression -> NULL
Rule 29    expression -> function_call
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression MULTIPLY expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> expression MODULO expression
Rule 35    expression -> expression CONCATENATION expression
Rule 36    expression -> expression CONCATENATION_ASSIGNMENT expression
Rule 37    function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS
Rule 38    if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list
Rule 39    impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON
Rule 40    condition -> expression
Rule 41    condition -> condition comparison condition
Rule 42    condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
Rule 43    condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
Rule 44    condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
Rule 45    condition -> NOT condition
Rule 46    condition -> condition AND condition
Rule 47    condition -> condition OR condition
Rule 48    comparison -> DOUBLE_EQUALS
Rule 49    comparison -> NOT_EQUALS
Rule 50    comparison -> GREATER_THAN
Rule 51    comparison -> LESS_THAN
Rule 52    comparison -> GREATER_THAN_OR_EQUALS
Rule 53    comparison -> LESS_THAN_OR_EQUALS

Terminals, with rules where they appear

ABSTRACT             : 
AND                  : 46
ARRAY                : 
AS                   : 
BOOLEAN              : 27
BREAK                : 
CALLABLE             : 
CASE                 : 
CATCH                : 
CLASS                : 
CLONE                : 
CLOSE_CURLY_BRACKET  : 13 14
CLOSE_PARENTHESIS    : 12 37 38 39 42 43 44
CLOSE_SQUARE_BRACKET : 
CLOSE_TAG            : 
COLON                : 
COMMA                : 16 20
COMMENT              : 
CONCATENATION        : 35
CONCATENATION_ASSIGNMENT : 36
CONST                : 
CONTINUE             : 
DECLARE              : 
DEFAULT              : 
DIE                  : 
DIVIDE               : 33
DO                   : 
DOUBLE_COLON         : 
DOUBLE_EQUALS        : 48
ECHO                 : 39
ELSE                 : 
ELSEIF               : 
EMPTY                : 
ENDDECLARE           : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDSWITCH            : 
ENDWHILE             : 
EQUALS               : 10
EVAL                 : 
EXIT                 : 
EXTENDS              : 
FINAL                : 
FINALLY              : 
FOR                  : 
FUNCTION             : 12
GREATER_THAN         : 50
GREATER_THAN_OR_EQUALS : 52
IDENTIFIER           : 12 37
IF                   : 38
LESS_THAN            : 51
LESS_THAN_OR_EQUALS  : 53
MINUS                : 31
MODULO               : 34
MULTIPLY             : 32
NOT                  : 45
NOT_EQUALS           : 49
NULL                 : 28
NUMBER               : 25
OPEN_CURLY_BRACKET   : 13 14
OPEN_PARENTHESIS     : 12 37 38 39 42 43 44
OPEN_SQUARE_BRACKET  : 
OPEN_TAG             : 
OPEN_TAG_WITH_ECHO   : 
OR                   : 47
PLUS                 : 30
RETURN               : 
SEMICOLON            : 10 11 39
STRING               : 26
VARIABLE             : 10 18 24
WHITESPACE           : 
error                : 

Nonterminals, with rules where they appear

assignment           : 7
body_statement_list  : 12 38
comparison           : 41 42 43 44
condition            : 2 38 41 41 42 42 43 43 44 44 45 46 46 47 47
empty                : 14 17 21
expression           : 10 11 22 30 30 31 31 32 32 33 33 34 34 35 35 36 36 40
expression_statement : 5
function_call        : 29
function_declaration : 6
if_statement         : 8
impresion            : 9
parameter            : 15 16
parameter_list       : 12 16
program              : 0
statement            : 3 4
statement_list       : 1 4 13
value_parameter      : 19 20
value_parameter_list : 20 39

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) program -> . condition
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (5) statement -> . expression_statement
    (6) statement -> . function_declaration
    (7) statement -> . assignment
    (8) statement -> . if_statement
    (9) statement -> . impresion
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (11) expression_statement -> . expression SEMICOLON
    (12) function_declaration -> . FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list
    (10) assignment -> . VARIABLE EQUALS expression SEMICOLON
    (38) if_statement -> . IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list
    (39) impresion -> . ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 13
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    FUNCTION        shift and go to state 19
    IF              shift and go to state 21
    ECHO            shift and go to state 22
    IDENTIFIER      shift and go to state 20

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    condition                      shift and go to state 3
    statement                      shift and go to state 4
    expression                     shift and go to state 5
    expression_statement           shift and go to state 8
    function_declaration           shift and go to state 9
    assignment                     shift and go to state 10
    if_statement                   shift and go to state 11
    impresion                      shift and go to state 12
    function_call                  shift and go to state 18

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (4) statement_list -> statement_list . statement
    (5) statement -> . expression_statement
    (6) statement -> . function_declaration
    (7) statement -> . assignment
    (8) statement -> . if_statement
    (9) statement -> . impresion
    (11) expression_statement -> . expression SEMICOLON
    (12) function_declaration -> . FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list
    (10) assignment -> . VARIABLE EQUALS expression SEMICOLON
    (38) if_statement -> . IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list
    (39) impresion -> . ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    $end            reduce using rule 1 (program -> statement_list .)
    FUNCTION        shift and go to state 19
    VARIABLE        shift and go to state 25
    IF              shift and go to state 21
    ECHO            shift and go to state 22
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    statement                      shift and go to state 23
    expression_statement           shift and go to state 8
    function_declaration           shift and go to state 9
    assignment                     shift and go to state 10
    if_statement                   shift and go to state 11
    impresion                      shift and go to state 12
    expression                     shift and go to state 24
    function_call                  shift and go to state 18

state 3

    (2) program -> condition .
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

    $end            reduce using rule 2 (program -> condition .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

    comparison                     shift and go to state 26

state 4

    (3) statement_list -> statement .

    FUNCTION        reduce using rule 3 (statement_list -> statement .)
    VARIABLE        reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    ECHO            reduce using rule 3 (statement_list -> statement .)
    NUMBER          reduce using rule 3 (statement_list -> statement .)
    STRING          reduce using rule 3 (statement_list -> statement .)
    BOOLEAN         reduce using rule 3 (statement_list -> statement .)
    NULL            reduce using rule 3 (statement_list -> statement .)
    IDENTIFIER      reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    CLOSE_CURLY_BRACKET reduce using rule 3 (statement_list -> statement .)


state 5

    (40) condition -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression
    (11) expression_statement -> expression . SEMICOLON

    AND             reduce using rule 40 (condition -> expression .)
    OR              reduce using rule 40 (condition -> expression .)
    DOUBLE_EQUALS   reduce using rule 40 (condition -> expression .)
    NOT_EQUALS      reduce using rule 40 (condition -> expression .)
    GREATER_THAN    reduce using rule 40 (condition -> expression .)
    LESS_THAN       reduce using rule 40 (condition -> expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 40 (condition -> expression .)
    LESS_THAN_OR_EQUALS reduce using rule 40 (condition -> expression .)
    $end            reduce using rule 40 (condition -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39
    CONCATENATION   shift and go to state 40
    CONCATENATION_ASSIGNMENT shift and go to state 41
    SEMICOLON       shift and go to state 42


state 6

    (42) condition -> OPEN_PARENTHESIS . condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> OPEN_PARENTHESIS . condition CLOSE_PARENTHESIS comparison condition
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 43
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 7

    (45) condition -> NOT . condition
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 46
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 8

    (5) statement -> expression_statement .

    FUNCTION        reduce using rule 5 (statement -> expression_statement .)
    VARIABLE        reduce using rule 5 (statement -> expression_statement .)
    IF              reduce using rule 5 (statement -> expression_statement .)
    ECHO            reduce using rule 5 (statement -> expression_statement .)
    NUMBER          reduce using rule 5 (statement -> expression_statement .)
    STRING          reduce using rule 5 (statement -> expression_statement .)
    BOOLEAN         reduce using rule 5 (statement -> expression_statement .)
    NULL            reduce using rule 5 (statement -> expression_statement .)
    IDENTIFIER      reduce using rule 5 (statement -> expression_statement .)
    $end            reduce using rule 5 (statement -> expression_statement .)
    CLOSE_CURLY_BRACKET reduce using rule 5 (statement -> expression_statement .)


state 9

    (6) statement -> function_declaration .

    FUNCTION        reduce using rule 6 (statement -> function_declaration .)
    VARIABLE        reduce using rule 6 (statement -> function_declaration .)
    IF              reduce using rule 6 (statement -> function_declaration .)
    ECHO            reduce using rule 6 (statement -> function_declaration .)
    NUMBER          reduce using rule 6 (statement -> function_declaration .)
    STRING          reduce using rule 6 (statement -> function_declaration .)
    BOOLEAN         reduce using rule 6 (statement -> function_declaration .)
    NULL            reduce using rule 6 (statement -> function_declaration .)
    IDENTIFIER      reduce using rule 6 (statement -> function_declaration .)
    $end            reduce using rule 6 (statement -> function_declaration .)
    CLOSE_CURLY_BRACKET reduce using rule 6 (statement -> function_declaration .)


state 10

    (7) statement -> assignment .

    FUNCTION        reduce using rule 7 (statement -> assignment .)
    VARIABLE        reduce using rule 7 (statement -> assignment .)
    IF              reduce using rule 7 (statement -> assignment .)
    ECHO            reduce using rule 7 (statement -> assignment .)
    NUMBER          reduce using rule 7 (statement -> assignment .)
    STRING          reduce using rule 7 (statement -> assignment .)
    BOOLEAN         reduce using rule 7 (statement -> assignment .)
    NULL            reduce using rule 7 (statement -> assignment .)
    IDENTIFIER      reduce using rule 7 (statement -> assignment .)
    $end            reduce using rule 7 (statement -> assignment .)
    CLOSE_CURLY_BRACKET reduce using rule 7 (statement -> assignment .)


state 11

    (8) statement -> if_statement .

    FUNCTION        reduce using rule 8 (statement -> if_statement .)
    VARIABLE        reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    ECHO            reduce using rule 8 (statement -> if_statement .)
    NUMBER          reduce using rule 8 (statement -> if_statement .)
    STRING          reduce using rule 8 (statement -> if_statement .)
    BOOLEAN         reduce using rule 8 (statement -> if_statement .)
    NULL            reduce using rule 8 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> if_statement .)
    $end            reduce using rule 8 (statement -> if_statement .)
    CLOSE_CURLY_BRACKET reduce using rule 8 (statement -> if_statement .)


state 12

    (9) statement -> impresion .

    FUNCTION        reduce using rule 9 (statement -> impresion .)
    VARIABLE        reduce using rule 9 (statement -> impresion .)
    IF              reduce using rule 9 (statement -> impresion .)
    ECHO            reduce using rule 9 (statement -> impresion .)
    NUMBER          reduce using rule 9 (statement -> impresion .)
    STRING          reduce using rule 9 (statement -> impresion .)
    BOOLEAN         reduce using rule 9 (statement -> impresion .)
    NULL            reduce using rule 9 (statement -> impresion .)
    IDENTIFIER      reduce using rule 9 (statement -> impresion .)
    $end            reduce using rule 9 (statement -> impresion .)
    CLOSE_CURLY_BRACKET reduce using rule 9 (statement -> impresion .)


state 13

    (24) expression -> VARIABLE .
    (10) assignment -> VARIABLE . EQUALS expression SEMICOLON

    PLUS            reduce using rule 24 (expression -> VARIABLE .)
    MINUS           reduce using rule 24 (expression -> VARIABLE .)
    MULTIPLY        reduce using rule 24 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 24 (expression -> VARIABLE .)
    MODULO          reduce using rule 24 (expression -> VARIABLE .)
    CONCATENATION   reduce using rule 24 (expression -> VARIABLE .)
    CONCATENATION_ASSIGNMENT reduce using rule 24 (expression -> VARIABLE .)
    SEMICOLON       reduce using rule 24 (expression -> VARIABLE .)
    AND             reduce using rule 24 (expression -> VARIABLE .)
    OR              reduce using rule 24 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 24 (expression -> VARIABLE .)
    NOT_EQUALS      reduce using rule 24 (expression -> VARIABLE .)
    GREATER_THAN    reduce using rule 24 (expression -> VARIABLE .)
    LESS_THAN       reduce using rule 24 (expression -> VARIABLE .)
    GREATER_THAN_OR_EQUALS reduce using rule 24 (expression -> VARIABLE .)
    LESS_THAN_OR_EQUALS reduce using rule 24 (expression -> VARIABLE .)
    $end            reduce using rule 24 (expression -> VARIABLE .)
    EQUALS          shift and go to state 47


state 14

    (25) expression -> NUMBER .

    PLUS            reduce using rule 25 (expression -> NUMBER .)
    MINUS           reduce using rule 25 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 25 (expression -> NUMBER .)
    DIVIDE          reduce using rule 25 (expression -> NUMBER .)
    MODULO          reduce using rule 25 (expression -> NUMBER .)
    CONCATENATION   reduce using rule 25 (expression -> NUMBER .)
    CONCATENATION_ASSIGNMENT reduce using rule 25 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 25 (expression -> NUMBER .)
    AND             reduce using rule 25 (expression -> NUMBER .)
    OR              reduce using rule 25 (expression -> NUMBER .)
    DOUBLE_EQUALS   reduce using rule 25 (expression -> NUMBER .)
    NOT_EQUALS      reduce using rule 25 (expression -> NUMBER .)
    GREATER_THAN    reduce using rule 25 (expression -> NUMBER .)
    LESS_THAN       reduce using rule 25 (expression -> NUMBER .)
    GREATER_THAN_OR_EQUALS reduce using rule 25 (expression -> NUMBER .)
    LESS_THAN_OR_EQUALS reduce using rule 25 (expression -> NUMBER .)
    $end            reduce using rule 25 (expression -> NUMBER .)
    CLOSE_PARENTHESIS reduce using rule 25 (expression -> NUMBER .)
    COMMA           reduce using rule 25 (expression -> NUMBER .)


state 15

    (26) expression -> STRING .

    PLUS            reduce using rule 26 (expression -> STRING .)
    MINUS           reduce using rule 26 (expression -> STRING .)
    MULTIPLY        reduce using rule 26 (expression -> STRING .)
    DIVIDE          reduce using rule 26 (expression -> STRING .)
    MODULO          reduce using rule 26 (expression -> STRING .)
    CONCATENATION   reduce using rule 26 (expression -> STRING .)
    CONCATENATION_ASSIGNMENT reduce using rule 26 (expression -> STRING .)
    SEMICOLON       reduce using rule 26 (expression -> STRING .)
    AND             reduce using rule 26 (expression -> STRING .)
    OR              reduce using rule 26 (expression -> STRING .)
    DOUBLE_EQUALS   reduce using rule 26 (expression -> STRING .)
    NOT_EQUALS      reduce using rule 26 (expression -> STRING .)
    GREATER_THAN    reduce using rule 26 (expression -> STRING .)
    LESS_THAN       reduce using rule 26 (expression -> STRING .)
    GREATER_THAN_OR_EQUALS reduce using rule 26 (expression -> STRING .)
    LESS_THAN_OR_EQUALS reduce using rule 26 (expression -> STRING .)
    $end            reduce using rule 26 (expression -> STRING .)
    CLOSE_PARENTHESIS reduce using rule 26 (expression -> STRING .)
    COMMA           reduce using rule 26 (expression -> STRING .)


state 16

    (27) expression -> BOOLEAN .

    PLUS            reduce using rule 27 (expression -> BOOLEAN .)
    MINUS           reduce using rule 27 (expression -> BOOLEAN .)
    MULTIPLY        reduce using rule 27 (expression -> BOOLEAN .)
    DIVIDE          reduce using rule 27 (expression -> BOOLEAN .)
    MODULO          reduce using rule 27 (expression -> BOOLEAN .)
    CONCATENATION   reduce using rule 27 (expression -> BOOLEAN .)
    CONCATENATION_ASSIGNMENT reduce using rule 27 (expression -> BOOLEAN .)
    SEMICOLON       reduce using rule 27 (expression -> BOOLEAN .)
    AND             reduce using rule 27 (expression -> BOOLEAN .)
    OR              reduce using rule 27 (expression -> BOOLEAN .)
    DOUBLE_EQUALS   reduce using rule 27 (expression -> BOOLEAN .)
    NOT_EQUALS      reduce using rule 27 (expression -> BOOLEAN .)
    GREATER_THAN    reduce using rule 27 (expression -> BOOLEAN .)
    LESS_THAN       reduce using rule 27 (expression -> BOOLEAN .)
    GREATER_THAN_OR_EQUALS reduce using rule 27 (expression -> BOOLEAN .)
    LESS_THAN_OR_EQUALS reduce using rule 27 (expression -> BOOLEAN .)
    $end            reduce using rule 27 (expression -> BOOLEAN .)
    CLOSE_PARENTHESIS reduce using rule 27 (expression -> BOOLEAN .)
    COMMA           reduce using rule 27 (expression -> BOOLEAN .)


state 17

    (28) expression -> NULL .

    PLUS            reduce using rule 28 (expression -> NULL .)
    MINUS           reduce using rule 28 (expression -> NULL .)
    MULTIPLY        reduce using rule 28 (expression -> NULL .)
    DIVIDE          reduce using rule 28 (expression -> NULL .)
    MODULO          reduce using rule 28 (expression -> NULL .)
    CONCATENATION   reduce using rule 28 (expression -> NULL .)
    CONCATENATION_ASSIGNMENT reduce using rule 28 (expression -> NULL .)
    SEMICOLON       reduce using rule 28 (expression -> NULL .)
    AND             reduce using rule 28 (expression -> NULL .)
    OR              reduce using rule 28 (expression -> NULL .)
    DOUBLE_EQUALS   reduce using rule 28 (expression -> NULL .)
    NOT_EQUALS      reduce using rule 28 (expression -> NULL .)
    GREATER_THAN    reduce using rule 28 (expression -> NULL .)
    LESS_THAN       reduce using rule 28 (expression -> NULL .)
    GREATER_THAN_OR_EQUALS reduce using rule 28 (expression -> NULL .)
    LESS_THAN_OR_EQUALS reduce using rule 28 (expression -> NULL .)
    $end            reduce using rule 28 (expression -> NULL .)
    CLOSE_PARENTHESIS reduce using rule 28 (expression -> NULL .)
    COMMA           reduce using rule 28 (expression -> NULL .)


state 18

    (29) expression -> function_call .

    PLUS            reduce using rule 29 (expression -> function_call .)
    MINUS           reduce using rule 29 (expression -> function_call .)
    MULTIPLY        reduce using rule 29 (expression -> function_call .)
    DIVIDE          reduce using rule 29 (expression -> function_call .)
    MODULO          reduce using rule 29 (expression -> function_call .)
    CONCATENATION   reduce using rule 29 (expression -> function_call .)
    CONCATENATION_ASSIGNMENT reduce using rule 29 (expression -> function_call .)
    SEMICOLON       reduce using rule 29 (expression -> function_call .)
    AND             reduce using rule 29 (expression -> function_call .)
    OR              reduce using rule 29 (expression -> function_call .)
    DOUBLE_EQUALS   reduce using rule 29 (expression -> function_call .)
    NOT_EQUALS      reduce using rule 29 (expression -> function_call .)
    GREATER_THAN    reduce using rule 29 (expression -> function_call .)
    LESS_THAN       reduce using rule 29 (expression -> function_call .)
    GREATER_THAN_OR_EQUALS reduce using rule 29 (expression -> function_call .)
    LESS_THAN_OR_EQUALS reduce using rule 29 (expression -> function_call .)
    $end            reduce using rule 29 (expression -> function_call .)
    CLOSE_PARENTHESIS reduce using rule 29 (expression -> function_call .)
    COMMA           reduce using rule 29 (expression -> function_call .)


state 19

    (12) function_declaration -> FUNCTION . IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list

    IDENTIFIER      shift and go to state 48


state 20

    (37) function_call -> IDENTIFIER . OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 49


state 21

    (38) if_statement -> IF . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list

    OPEN_PARENTHESIS shift and go to state 50


state 22

    (39) impresion -> ECHO . OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON

    OPEN_PARENTHESIS shift and go to state 51


state 23

    (4) statement_list -> statement_list statement .

    FUNCTION        reduce using rule 4 (statement_list -> statement_list statement .)
    VARIABLE        reduce using rule 4 (statement_list -> statement_list statement .)
    IF              reduce using rule 4 (statement_list -> statement_list statement .)
    ECHO            reduce using rule 4 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 4 (statement_list -> statement_list statement .)
    STRING          reduce using rule 4 (statement_list -> statement_list statement .)
    BOOLEAN         reduce using rule 4 (statement_list -> statement_list statement .)
    NULL            reduce using rule 4 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 4 (statement_list -> statement_list statement .)
    $end            reduce using rule 4 (statement_list -> statement_list statement .)
    CLOSE_CURLY_BRACKET reduce using rule 4 (statement_list -> statement_list statement .)


state 24

    (11) expression_statement -> expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    SEMICOLON       shift and go to state 42
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39
    CONCATENATION   shift and go to state 40
    CONCATENATION_ASSIGNMENT shift and go to state 41


state 25

    (10) assignment -> VARIABLE . EQUALS expression SEMICOLON
    (24) expression -> VARIABLE .

    EQUALS          shift and go to state 47
    SEMICOLON       reduce using rule 24 (expression -> VARIABLE .)
    PLUS            reduce using rule 24 (expression -> VARIABLE .)
    MINUS           reduce using rule 24 (expression -> VARIABLE .)
    MULTIPLY        reduce using rule 24 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 24 (expression -> VARIABLE .)
    MODULO          reduce using rule 24 (expression -> VARIABLE .)
    CONCATENATION   reduce using rule 24 (expression -> VARIABLE .)
    CONCATENATION_ASSIGNMENT reduce using rule 24 (expression -> VARIABLE .)


state 26

    (41) condition -> condition comparison . condition
    (44) condition -> condition comparison . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 53
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 52
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 27

    (46) condition -> condition AND . condition
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 54
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 28

    (47) condition -> condition OR . condition
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 55
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 29

    (48) comparison -> DOUBLE_EQUALS .

    OPEN_PARENTHESIS reduce using rule 48 (comparison -> DOUBLE_EQUALS .)
    NOT             reduce using rule 48 (comparison -> DOUBLE_EQUALS .)
    VARIABLE        reduce using rule 48 (comparison -> DOUBLE_EQUALS .)
    NUMBER          reduce using rule 48 (comparison -> DOUBLE_EQUALS .)
    STRING          reduce using rule 48 (comparison -> DOUBLE_EQUALS .)
    BOOLEAN         reduce using rule 48 (comparison -> DOUBLE_EQUALS .)
    NULL            reduce using rule 48 (comparison -> DOUBLE_EQUALS .)
    IDENTIFIER      reduce using rule 48 (comparison -> DOUBLE_EQUALS .)


state 30

    (49) comparison -> NOT_EQUALS .

    OPEN_PARENTHESIS reduce using rule 49 (comparison -> NOT_EQUALS .)
    NOT             reduce using rule 49 (comparison -> NOT_EQUALS .)
    VARIABLE        reduce using rule 49 (comparison -> NOT_EQUALS .)
    NUMBER          reduce using rule 49 (comparison -> NOT_EQUALS .)
    STRING          reduce using rule 49 (comparison -> NOT_EQUALS .)
    BOOLEAN         reduce using rule 49 (comparison -> NOT_EQUALS .)
    NULL            reduce using rule 49 (comparison -> NOT_EQUALS .)
    IDENTIFIER      reduce using rule 49 (comparison -> NOT_EQUALS .)


state 31

    (50) comparison -> GREATER_THAN .

    OPEN_PARENTHESIS reduce using rule 50 (comparison -> GREATER_THAN .)
    NOT             reduce using rule 50 (comparison -> GREATER_THAN .)
    VARIABLE        reduce using rule 50 (comparison -> GREATER_THAN .)
    NUMBER          reduce using rule 50 (comparison -> GREATER_THAN .)
    STRING          reduce using rule 50 (comparison -> GREATER_THAN .)
    BOOLEAN         reduce using rule 50 (comparison -> GREATER_THAN .)
    NULL            reduce using rule 50 (comparison -> GREATER_THAN .)
    IDENTIFIER      reduce using rule 50 (comparison -> GREATER_THAN .)


state 32

    (51) comparison -> LESS_THAN .

    OPEN_PARENTHESIS reduce using rule 51 (comparison -> LESS_THAN .)
    NOT             reduce using rule 51 (comparison -> LESS_THAN .)
    VARIABLE        reduce using rule 51 (comparison -> LESS_THAN .)
    NUMBER          reduce using rule 51 (comparison -> LESS_THAN .)
    STRING          reduce using rule 51 (comparison -> LESS_THAN .)
    BOOLEAN         reduce using rule 51 (comparison -> LESS_THAN .)
    NULL            reduce using rule 51 (comparison -> LESS_THAN .)
    IDENTIFIER      reduce using rule 51 (comparison -> LESS_THAN .)


state 33

    (52) comparison -> GREATER_THAN_OR_EQUALS .

    OPEN_PARENTHESIS reduce using rule 52 (comparison -> GREATER_THAN_OR_EQUALS .)
    NOT             reduce using rule 52 (comparison -> GREATER_THAN_OR_EQUALS .)
    VARIABLE        reduce using rule 52 (comparison -> GREATER_THAN_OR_EQUALS .)
    NUMBER          reduce using rule 52 (comparison -> GREATER_THAN_OR_EQUALS .)
    STRING          reduce using rule 52 (comparison -> GREATER_THAN_OR_EQUALS .)
    BOOLEAN         reduce using rule 52 (comparison -> GREATER_THAN_OR_EQUALS .)
    NULL            reduce using rule 52 (comparison -> GREATER_THAN_OR_EQUALS .)
    IDENTIFIER      reduce using rule 52 (comparison -> GREATER_THAN_OR_EQUALS .)


state 34

    (53) comparison -> LESS_THAN_OR_EQUALS .

    OPEN_PARENTHESIS reduce using rule 53 (comparison -> LESS_THAN_OR_EQUALS .)
    NOT             reduce using rule 53 (comparison -> LESS_THAN_OR_EQUALS .)
    VARIABLE        reduce using rule 53 (comparison -> LESS_THAN_OR_EQUALS .)
    NUMBER          reduce using rule 53 (comparison -> LESS_THAN_OR_EQUALS .)
    STRING          reduce using rule 53 (comparison -> LESS_THAN_OR_EQUALS .)
    BOOLEAN         reduce using rule 53 (comparison -> LESS_THAN_OR_EQUALS .)
    NULL            reduce using rule 53 (comparison -> LESS_THAN_OR_EQUALS .)
    IDENTIFIER      reduce using rule 53 (comparison -> LESS_THAN_OR_EQUALS .)


state 35

    (30) expression -> expression PLUS . expression
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    expression                     shift and go to state 56
    function_call                  shift and go to state 18

state 36

    (31) expression -> expression MINUS . expression
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    expression                     shift and go to state 57
    function_call                  shift and go to state 18

state 37

    (32) expression -> expression MULTIPLY . expression
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    expression                     shift and go to state 58
    function_call                  shift and go to state 18

state 38

    (33) expression -> expression DIVIDE . expression
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    expression                     shift and go to state 59
    function_call                  shift and go to state 18

state 39

    (34) expression -> expression MODULO . expression
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    expression                     shift and go to state 60
    function_call                  shift and go to state 18

state 40

    (35) expression -> expression CONCATENATION . expression
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    expression                     shift and go to state 61
    function_call                  shift and go to state 18

state 41

    (36) expression -> expression CONCATENATION_ASSIGNMENT . expression
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    expression                     shift and go to state 62
    function_call                  shift and go to state 18

state 42

    (11) expression_statement -> expression SEMICOLON .

    FUNCTION        reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    VARIABLE        reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    IF              reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    ECHO            reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    STRING          reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    BOOLEAN         reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    NULL            reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    IDENTIFIER      reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    $end            reduce using rule 11 (expression_statement -> expression SEMICOLON .)
    CLOSE_CURLY_BRACKET reduce using rule 11 (expression_statement -> expression SEMICOLON .)


state 43

    (42) condition -> OPEN_PARENTHESIS condition . comparison condition CLOSE_PARENTHESIS
    (43) condition -> OPEN_PARENTHESIS condition . CLOSE_PARENTHESIS comparison condition
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

    CLOSE_PARENTHESIS shift and go to state 64
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

    comparison                     shift and go to state 63

state 44

    (40) condition -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    CLOSE_PARENTHESIS reduce using rule 40 (condition -> expression .)
    AND             reduce using rule 40 (condition -> expression .)
    OR              reduce using rule 40 (condition -> expression .)
    DOUBLE_EQUALS   reduce using rule 40 (condition -> expression .)
    NOT_EQUALS      reduce using rule 40 (condition -> expression .)
    GREATER_THAN    reduce using rule 40 (condition -> expression .)
    LESS_THAN       reduce using rule 40 (condition -> expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 40 (condition -> expression .)
    LESS_THAN_OR_EQUALS reduce using rule 40 (condition -> expression .)
    $end            reduce using rule 40 (condition -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39
    CONCATENATION   shift and go to state 40
    CONCATENATION_ASSIGNMENT shift and go to state 41


state 45

    (24) expression -> VARIABLE .

    PLUS            reduce using rule 24 (expression -> VARIABLE .)
    MINUS           reduce using rule 24 (expression -> VARIABLE .)
    MULTIPLY        reduce using rule 24 (expression -> VARIABLE .)
    DIVIDE          reduce using rule 24 (expression -> VARIABLE .)
    MODULO          reduce using rule 24 (expression -> VARIABLE .)
    CONCATENATION   reduce using rule 24 (expression -> VARIABLE .)
    CONCATENATION_ASSIGNMENT reduce using rule 24 (expression -> VARIABLE .)
    CLOSE_PARENTHESIS reduce using rule 24 (expression -> VARIABLE .)
    AND             reduce using rule 24 (expression -> VARIABLE .)
    OR              reduce using rule 24 (expression -> VARIABLE .)
    DOUBLE_EQUALS   reduce using rule 24 (expression -> VARIABLE .)
    NOT_EQUALS      reduce using rule 24 (expression -> VARIABLE .)
    GREATER_THAN    reduce using rule 24 (expression -> VARIABLE .)
    LESS_THAN       reduce using rule 24 (expression -> VARIABLE .)
    GREATER_THAN_OR_EQUALS reduce using rule 24 (expression -> VARIABLE .)
    LESS_THAN_OR_EQUALS reduce using rule 24 (expression -> VARIABLE .)
    $end            reduce using rule 24 (expression -> VARIABLE .)
    SEMICOLON       reduce using rule 24 (expression -> VARIABLE .)
    COMMA           reduce using rule 24 (expression -> VARIABLE .)


state 46

    (45) condition -> NOT condition .
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUALS resolved as shift
    $end            reduce using rule 45 (condition -> NOT condition .)
    CLOSE_PARENTHESIS reduce using rule 45 (condition -> NOT condition .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

  ! AND             [ reduce using rule 45 (condition -> NOT condition .) ]
  ! OR              [ reduce using rule 45 (condition -> NOT condition .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 45 (condition -> NOT condition .) ]
  ! NOT_EQUALS      [ reduce using rule 45 (condition -> NOT condition .) ]
  ! GREATER_THAN    [ reduce using rule 45 (condition -> NOT condition .) ]
  ! LESS_THAN       [ reduce using rule 45 (condition -> NOT condition .) ]
  ! GREATER_THAN_OR_EQUALS [ reduce using rule 45 (condition -> NOT condition .) ]
  ! LESS_THAN_OR_EQUALS [ reduce using rule 45 (condition -> NOT condition .) ]

    comparison                     shift and go to state 26

state 47

    (10) assignment -> VARIABLE EQUALS . expression SEMICOLON
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    expression                     shift and go to state 65
    function_call                  shift and go to state 18

state 48

    (12) function_declaration -> FUNCTION IDENTIFIER . OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list

    OPEN_PARENTHESIS shift and go to state 66


state 49

    (37) function_call -> IDENTIFIER OPEN_PARENTHESIS . CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS shift and go to state 67


state 50

    (38) if_statement -> IF OPEN_PARENTHESIS . condition CLOSE_PARENTHESIS body_statement_list
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 68
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 51

    (39) impresion -> ECHO OPEN_PARENTHESIS . value_parameter_list CLOSE_PARENTHESIS SEMICOLON
    (19) value_parameter_list -> . value_parameter
    (20) value_parameter_list -> . value_parameter_list COMMA value_parameter
    (21) value_parameter_list -> . empty
    (22) value_parameter -> . expression
    (23) empty -> .
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    CLOSE_PARENTHESIS reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    value_parameter_list           shift and go to state 69
    value_parameter                shift and go to state 70
    empty                          shift and go to state 71
    expression                     shift and go to state 72
    function_call                  shift and go to state 18

state 52

    (41) condition -> condition comparison condition .
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUALS resolved as shift
    $end            reduce using rule 41 (condition -> condition comparison condition .)
    CLOSE_PARENTHESIS reduce using rule 41 (condition -> condition comparison condition .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

  ! AND             [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! OR              [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! NOT_EQUALS      [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! GREATER_THAN    [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! LESS_THAN       [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! GREATER_THAN_OR_EQUALS [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! LESS_THAN_OR_EQUALS [ reduce using rule 41 (condition -> condition comparison condition .) ]

    comparison                     shift and go to state 26

state 53

    (44) condition -> condition comparison OPEN_PARENTHESIS . condition CLOSE_PARENTHESIS
    (42) condition -> OPEN_PARENTHESIS . condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> OPEN_PARENTHESIS . condition CLOSE_PARENTHESIS comparison condition
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 73
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 54

    (46) condition -> condition AND condition .
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUALS resolved as shift
    $end            reduce using rule 46 (condition -> condition AND condition .)
    CLOSE_PARENTHESIS reduce using rule 46 (condition -> condition AND condition .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

  ! AND             [ reduce using rule 46 (condition -> condition AND condition .) ]
  ! OR              [ reduce using rule 46 (condition -> condition AND condition .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 46 (condition -> condition AND condition .) ]
  ! NOT_EQUALS      [ reduce using rule 46 (condition -> condition AND condition .) ]
  ! GREATER_THAN    [ reduce using rule 46 (condition -> condition AND condition .) ]
  ! LESS_THAN       [ reduce using rule 46 (condition -> condition AND condition .) ]
  ! GREATER_THAN_OR_EQUALS [ reduce using rule 46 (condition -> condition AND condition .) ]
  ! LESS_THAN_OR_EQUALS [ reduce using rule 46 (condition -> condition AND condition .) ]

    comparison                     shift and go to state 26

state 55

    (47) condition -> condition OR condition .
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUALS resolved as shift
    $end            reduce using rule 47 (condition -> condition OR condition .)
    CLOSE_PARENTHESIS reduce using rule 47 (condition -> condition OR condition .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

  ! AND             [ reduce using rule 47 (condition -> condition OR condition .) ]
  ! OR              [ reduce using rule 47 (condition -> condition OR condition .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 47 (condition -> condition OR condition .) ]
  ! NOT_EQUALS      [ reduce using rule 47 (condition -> condition OR condition .) ]
  ! GREATER_THAN    [ reduce using rule 47 (condition -> condition OR condition .) ]
  ! LESS_THAN       [ reduce using rule 47 (condition -> condition OR condition .) ]
  ! GREATER_THAN_OR_EQUALS [ reduce using rule 47 (condition -> condition OR condition .) ]
  ! LESS_THAN_OR_EQUALS [ reduce using rule 47 (condition -> condition OR condition .) ]

    comparison                     shift and go to state 26

state 56

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    CONCATENATION   reduce using rule 30 (expression -> expression PLUS expression .)
    CONCATENATION_ASSIGNMENT reduce using rule 30 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression PLUS expression .)
    AND             reduce using rule 30 (expression -> expression PLUS expression .)
    OR              reduce using rule 30 (expression -> expression PLUS expression .)
    DOUBLE_EQUALS   reduce using rule 30 (expression -> expression PLUS expression .)
    NOT_EQUALS      reduce using rule 30 (expression -> expression PLUS expression .)
    GREATER_THAN    reduce using rule 30 (expression -> expression PLUS expression .)
    LESS_THAN       reduce using rule 30 (expression -> expression PLUS expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 30 (expression -> expression PLUS expression .)
    LESS_THAN_OR_EQUALS reduce using rule 30 (expression -> expression PLUS expression .)
    $end            reduce using rule 30 (expression -> expression PLUS expression .)
    CLOSE_PARENTHESIS reduce using rule 30 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39

  ! MULTIPLY        [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! MODULO          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! CONCATENATION   [ shift and go to state 40 ]
  ! CONCATENATION_ASSIGNMENT [ shift and go to state 41 ]


state 57

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    CONCATENATION   reduce using rule 31 (expression -> expression MINUS expression .)
    CONCATENATION_ASSIGNMENT reduce using rule 31 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression MINUS expression .)
    AND             reduce using rule 31 (expression -> expression MINUS expression .)
    OR              reduce using rule 31 (expression -> expression MINUS expression .)
    DOUBLE_EQUALS   reduce using rule 31 (expression -> expression MINUS expression .)
    NOT_EQUALS      reduce using rule 31 (expression -> expression MINUS expression .)
    GREATER_THAN    reduce using rule 31 (expression -> expression MINUS expression .)
    LESS_THAN       reduce using rule 31 (expression -> expression MINUS expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 31 (expression -> expression MINUS expression .)
    LESS_THAN_OR_EQUALS reduce using rule 31 (expression -> expression MINUS expression .)
    $end            reduce using rule 31 (expression -> expression MINUS expression .)
    CLOSE_PARENTHESIS reduce using rule 31 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39

  ! MULTIPLY        [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! MODULO          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! CONCATENATION   [ shift and go to state 40 ]
  ! CONCATENATION_ASSIGNMENT [ shift and go to state 41 ]


state 58

    (32) expression -> expression MULTIPLY expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    PLUS            reduce using rule 32 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 32 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 32 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 32 (expression -> expression MULTIPLY expression .)
    MODULO          reduce using rule 32 (expression -> expression MULTIPLY expression .)
    CONCATENATION   reduce using rule 32 (expression -> expression MULTIPLY expression .)
    CONCATENATION_ASSIGNMENT reduce using rule 32 (expression -> expression MULTIPLY expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 32 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 32 (expression -> expression MULTIPLY expression .)
    DOUBLE_EQUALS   reduce using rule 32 (expression -> expression MULTIPLY expression .)
    NOT_EQUALS      reduce using rule 32 (expression -> expression MULTIPLY expression .)
    GREATER_THAN    reduce using rule 32 (expression -> expression MULTIPLY expression .)
    LESS_THAN       reduce using rule 32 (expression -> expression MULTIPLY expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 32 (expression -> expression MULTIPLY expression .)
    LESS_THAN_OR_EQUALS reduce using rule 32 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 32 (expression -> expression MULTIPLY expression .)
    CLOSE_PARENTHESIS reduce using rule 32 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 32 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MULTIPLY        [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULO          [ shift and go to state 39 ]
  ! CONCATENATION   [ shift and go to state 40 ]
  ! CONCATENATION_ASSIGNMENT [ shift and go to state 41 ]


state 59

    (33) expression -> expression DIVIDE expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    MODULO          reduce using rule 33 (expression -> expression DIVIDE expression .)
    CONCATENATION   reduce using rule 33 (expression -> expression DIVIDE expression .)
    CONCATENATION_ASSIGNMENT reduce using rule 33 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 33 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 33 (expression -> expression DIVIDE expression .)
    DOUBLE_EQUALS   reduce using rule 33 (expression -> expression DIVIDE expression .)
    NOT_EQUALS      reduce using rule 33 (expression -> expression DIVIDE expression .)
    GREATER_THAN    reduce using rule 33 (expression -> expression DIVIDE expression .)
    LESS_THAN       reduce using rule 33 (expression -> expression DIVIDE expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 33 (expression -> expression DIVIDE expression .)
    LESS_THAN_OR_EQUALS reduce using rule 33 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 33 (expression -> expression DIVIDE expression .)
    CLOSE_PARENTHESIS reduce using rule 33 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 33 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MULTIPLY        [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULO          [ shift and go to state 39 ]
  ! CONCATENATION   [ shift and go to state 40 ]
  ! CONCATENATION_ASSIGNMENT [ shift and go to state 41 ]


state 60

    (34) expression -> expression MODULO expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    PLUS            reduce using rule 34 (expression -> expression MODULO expression .)
    MINUS           reduce using rule 34 (expression -> expression MODULO expression .)
    MULTIPLY        reduce using rule 34 (expression -> expression MODULO expression .)
    DIVIDE          reduce using rule 34 (expression -> expression MODULO expression .)
    MODULO          reduce using rule 34 (expression -> expression MODULO expression .)
    CONCATENATION   reduce using rule 34 (expression -> expression MODULO expression .)
    CONCATENATION_ASSIGNMENT reduce using rule 34 (expression -> expression MODULO expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MODULO expression .)
    AND             reduce using rule 34 (expression -> expression MODULO expression .)
    OR              reduce using rule 34 (expression -> expression MODULO expression .)
    DOUBLE_EQUALS   reduce using rule 34 (expression -> expression MODULO expression .)
    NOT_EQUALS      reduce using rule 34 (expression -> expression MODULO expression .)
    GREATER_THAN    reduce using rule 34 (expression -> expression MODULO expression .)
    LESS_THAN       reduce using rule 34 (expression -> expression MODULO expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 34 (expression -> expression MODULO expression .)
    LESS_THAN_OR_EQUALS reduce using rule 34 (expression -> expression MODULO expression .)
    $end            reduce using rule 34 (expression -> expression MODULO expression .)
    CLOSE_PARENTHESIS reduce using rule 34 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 34 (expression -> expression MODULO expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MULTIPLY        [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MODULO          [ shift and go to state 39 ]
  ! CONCATENATION   [ shift and go to state 40 ]
  ! CONCATENATION_ASSIGNMENT [ shift and go to state 41 ]


state 61

    (35) expression -> expression CONCATENATION expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    CONCATENATION   reduce using rule 35 (expression -> expression CONCATENATION expression .)
    CONCATENATION_ASSIGNMENT reduce using rule 35 (expression -> expression CONCATENATION expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression CONCATENATION expression .)
    AND             reduce using rule 35 (expression -> expression CONCATENATION expression .)
    OR              reduce using rule 35 (expression -> expression CONCATENATION expression .)
    DOUBLE_EQUALS   reduce using rule 35 (expression -> expression CONCATENATION expression .)
    NOT_EQUALS      reduce using rule 35 (expression -> expression CONCATENATION expression .)
    GREATER_THAN    reduce using rule 35 (expression -> expression CONCATENATION expression .)
    LESS_THAN       reduce using rule 35 (expression -> expression CONCATENATION expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 35 (expression -> expression CONCATENATION expression .)
    LESS_THAN_OR_EQUALS reduce using rule 35 (expression -> expression CONCATENATION expression .)
    $end            reduce using rule 35 (expression -> expression CONCATENATION expression .)
    CLOSE_PARENTHESIS reduce using rule 35 (expression -> expression CONCATENATION expression .)
    COMMA           reduce using rule 35 (expression -> expression CONCATENATION expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39

  ! PLUS            [ reduce using rule 35 (expression -> expression CONCATENATION expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression CONCATENATION expression .) ]
  ! MULTIPLY        [ reduce using rule 35 (expression -> expression CONCATENATION expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression CONCATENATION expression .) ]
  ! MODULO          [ reduce using rule 35 (expression -> expression CONCATENATION expression .) ]
  ! CONCATENATION   [ shift and go to state 40 ]
  ! CONCATENATION_ASSIGNMENT [ shift and go to state 41 ]


state 62

    (36) expression -> expression CONCATENATION_ASSIGNMENT expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    CONCATENATION   reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    CONCATENATION_ASSIGNMENT reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    AND             reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    OR              reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    DOUBLE_EQUALS   reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    NOT_EQUALS      reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    GREATER_THAN    reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    LESS_THAN       reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    GREATER_THAN_OR_EQUALS reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    LESS_THAN_OR_EQUALS reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    $end            reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    CLOSE_PARENTHESIS reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    COMMA           reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39

  ! PLUS            [ reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .) ]
  ! MULTIPLY        [ reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .) ]
  ! MODULO          [ reduce using rule 36 (expression -> expression CONCATENATION_ASSIGNMENT expression .) ]
  ! CONCATENATION   [ shift and go to state 40 ]
  ! CONCATENATION_ASSIGNMENT [ shift and go to state 41 ]


state 63

    (42) condition -> OPEN_PARENTHESIS condition comparison . condition CLOSE_PARENTHESIS
    (41) condition -> condition comparison . condition
    (44) condition -> condition comparison . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 53
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 74
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 64

    (43) condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS . comparison condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

    comparison                     shift and go to state 75

state 65

    (10) assignment -> VARIABLE EQUALS expression . SEMICOLON
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    SEMICOLON       shift and go to state 76
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39
    CONCATENATION   shift and go to state 40
    CONCATENATION_ASSIGNMENT shift and go to state 41


state 66

    (12) function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS . parameter_list CLOSE_PARENTHESIS body_statement_list
    (15) parameter_list -> . parameter
    (16) parameter_list -> . parameter_list COMMA parameter
    (17) parameter_list -> . empty
    (18) parameter -> . VARIABLE
    (23) empty -> .

    VARIABLE        shift and go to state 80
    CLOSE_PARENTHESIS reduce using rule 23 (empty -> .)
    COMMA           reduce using rule 23 (empty -> .)

    parameter_list                 shift and go to state 77
    parameter                      shift and go to state 78
    empty                          shift and go to state 79

state 67

    (37) function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .

    PLUS            reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MINUS           reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MULTIPLY        reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DIVIDE          reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    MODULO          reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CONCATENATION   reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CONCATENATION_ASSIGNMENT reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    SEMICOLON       reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    AND             reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    OR              reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    GREATER_THAN_OR_EQUALS reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    LESS_THAN_OR_EQUALS reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    $end            reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)
    COMMA           reduce using rule 37 (function_call -> IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS .)


state 68

    (38) if_statement -> IF OPEN_PARENTHESIS condition . CLOSE_PARENTHESIS body_statement_list
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

    CLOSE_PARENTHESIS shift and go to state 81
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

    comparison                     shift and go to state 26

state 69

    (39) impresion -> ECHO OPEN_PARENTHESIS value_parameter_list . CLOSE_PARENTHESIS SEMICOLON
    (20) value_parameter_list -> value_parameter_list . COMMA value_parameter

    CLOSE_PARENTHESIS shift and go to state 82
    COMMA           shift and go to state 83


state 70

    (19) value_parameter_list -> value_parameter .

    CLOSE_PARENTHESIS reduce using rule 19 (value_parameter_list -> value_parameter .)
    COMMA           reduce using rule 19 (value_parameter_list -> value_parameter .)


state 71

    (21) value_parameter_list -> empty .

    CLOSE_PARENTHESIS reduce using rule 21 (value_parameter_list -> empty .)
    COMMA           reduce using rule 21 (value_parameter_list -> empty .)


state 72

    (22) value_parameter -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . MULTIPLY expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULO expression
    (35) expression -> expression . CONCATENATION expression
    (36) expression -> expression . CONCATENATION_ASSIGNMENT expression

    CLOSE_PARENTHESIS reduce using rule 22 (value_parameter -> expression .)
    COMMA           reduce using rule 22 (value_parameter -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 37
    DIVIDE          shift and go to state 38
    MODULO          shift and go to state 39
    CONCATENATION   shift and go to state 40
    CONCATENATION_ASSIGNMENT shift and go to state 41


state 73

    (44) condition -> condition comparison OPEN_PARENTHESIS condition . CLOSE_PARENTHESIS
    (42) condition -> OPEN_PARENTHESIS condition . comparison condition CLOSE_PARENTHESIS
    (43) condition -> OPEN_PARENTHESIS condition . CLOSE_PARENTHESIS comparison condition
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

    CLOSE_PARENTHESIS shift and go to state 84
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

    comparison                     shift and go to state 63

state 74

    (42) condition -> OPEN_PARENTHESIS condition comparison condition . CLOSE_PARENTHESIS
    (41) condition -> condition comparison condition .
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

  ! shift/reduce conflict for CLOSE_PARENTHESIS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUALS resolved as shift
    CLOSE_PARENTHESIS shift and go to state 85
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

  ! CLOSE_PARENTHESIS [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! AND             [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! OR              [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! NOT_EQUALS      [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! GREATER_THAN    [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! LESS_THAN       [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! GREATER_THAN_OR_EQUALS [ reduce using rule 41 (condition -> condition comparison condition .) ]
  ! LESS_THAN_OR_EQUALS [ reduce using rule 41 (condition -> condition comparison condition .) ]

    comparison                     shift and go to state 26

state 75

    (43) condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison . condition
    (40) condition -> . expression
    (41) condition -> . condition comparison condition
    (42) condition -> . OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS
    (43) condition -> . OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition
    (44) condition -> . condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (45) condition -> . NOT condition
    (46) condition -> . condition AND condition
    (47) condition -> . condition OR condition
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    OPEN_PARENTHESIS shift and go to state 6
    NOT             shift and go to state 7
    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    condition                      shift and go to state 86
    expression                     shift and go to state 44
    function_call                  shift and go to state 18

state 76

    (10) assignment -> VARIABLE EQUALS expression SEMICOLON .

    FUNCTION        reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    VARIABLE        reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    IF              reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    ECHO            reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    STRING          reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    BOOLEAN         reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    NULL            reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    IDENTIFIER      reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    $end            reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)
    CLOSE_CURLY_BRACKET reduce using rule 10 (assignment -> VARIABLE EQUALS expression SEMICOLON .)


state 77

    (12) function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list . CLOSE_PARENTHESIS body_statement_list
    (16) parameter_list -> parameter_list . COMMA parameter

    CLOSE_PARENTHESIS shift and go to state 87
    COMMA           shift and go to state 88


state 78

    (15) parameter_list -> parameter .

    CLOSE_PARENTHESIS reduce using rule 15 (parameter_list -> parameter .)
    COMMA           reduce using rule 15 (parameter_list -> parameter .)


state 79

    (17) parameter_list -> empty .

    CLOSE_PARENTHESIS reduce using rule 17 (parameter_list -> empty .)
    COMMA           reduce using rule 17 (parameter_list -> empty .)


state 80

    (18) parameter -> VARIABLE .

    CLOSE_PARENTHESIS reduce using rule 18 (parameter -> VARIABLE .)
    COMMA           reduce using rule 18 (parameter -> VARIABLE .)


state 81

    (38) if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS . body_statement_list
    (13) body_statement_list -> . OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET
    (14) body_statement_list -> . OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET shift and go to state 90

    body_statement_list            shift and go to state 89

state 82

    (39) impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 91


state 83

    (20) value_parameter_list -> value_parameter_list COMMA . value_parameter
    (22) value_parameter -> . expression
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    VARIABLE        shift and go to state 45
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    value_parameter                shift and go to state 92
    expression                     shift and go to state 72
    function_call                  shift and go to state 18

state 84

    (44) condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .
    (43) condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS . comparison condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUALS resolved as shift
    AND             reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .)
    OR              reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .)
    $end            reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

  ! DOUBLE_EQUALS   [ reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .) ]
  ! NOT_EQUALS      [ reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .) ]
  ! GREATER_THAN    [ reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .) ]
  ! LESS_THAN       [ reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .) ]
  ! GREATER_THAN_OR_EQUALS [ reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .) ]
  ! LESS_THAN_OR_EQUALS [ reduce using rule 44 (condition -> condition comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS .) ]

    comparison                     shift and go to state 75

state 85

    (42) condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .

    AND             reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    OR              reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    DOUBLE_EQUALS   reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    NOT_EQUALS      reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    GREATER_THAN    reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    LESS_THAN       reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    GREATER_THAN_OR_EQUALS reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    LESS_THAN_OR_EQUALS reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    $end            reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)
    CLOSE_PARENTHESIS reduce using rule 42 (condition -> OPEN_PARENTHESIS condition comparison condition CLOSE_PARENTHESIS .)


state 86

    (43) condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .
    (41) condition -> condition . comparison condition
    (44) condition -> condition . comparison OPEN_PARENTHESIS condition CLOSE_PARENTHESIS
    (46) condition -> condition . AND condition
    (47) condition -> condition . OR condition
    (48) comparison -> . DOUBLE_EQUALS
    (49) comparison -> . NOT_EQUALS
    (50) comparison -> . GREATER_THAN
    (51) comparison -> . LESS_THAN
    (52) comparison -> . GREATER_THAN_OR_EQUALS
    (53) comparison -> . LESS_THAN_OR_EQUALS

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for DOUBLE_EQUALS resolved as shift
  ! shift/reduce conflict for NOT_EQUALS resolved as shift
  ! shift/reduce conflict for GREATER_THAN resolved as shift
  ! shift/reduce conflict for LESS_THAN resolved as shift
  ! shift/reduce conflict for GREATER_THAN_OR_EQUALS resolved as shift
  ! shift/reduce conflict for LESS_THAN_OR_EQUALS resolved as shift
    $end            reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .)
    CLOSE_PARENTHESIS reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .)
    AND             shift and go to state 27
    OR              shift and go to state 28
    DOUBLE_EQUALS   shift and go to state 29
    NOT_EQUALS      shift and go to state 30
    GREATER_THAN    shift and go to state 31
    LESS_THAN       shift and go to state 32
    GREATER_THAN_OR_EQUALS shift and go to state 33
    LESS_THAN_OR_EQUALS shift and go to state 34

  ! AND             [ reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .) ]
  ! OR              [ reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .) ]
  ! DOUBLE_EQUALS   [ reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .) ]
  ! NOT_EQUALS      [ reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .) ]
  ! GREATER_THAN    [ reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .) ]
  ! LESS_THAN       [ reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .) ]
  ! GREATER_THAN_OR_EQUALS [ reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .) ]
  ! LESS_THAN_OR_EQUALS [ reduce using rule 43 (condition -> OPEN_PARENTHESIS condition CLOSE_PARENTHESIS comparison condition .) ]

    comparison                     shift and go to state 26

state 87

    (12) function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS . body_statement_list
    (13) body_statement_list -> . OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET
    (14) body_statement_list -> . OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET

    OPEN_CURLY_BRACKET shift and go to state 90

    body_statement_list            shift and go to state 93

state 88

    (16) parameter_list -> parameter_list COMMA . parameter
    (18) parameter -> . VARIABLE

    VARIABLE        shift and go to state 80

    parameter                      shift and go to state 94

state 89

    (38) if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .

    FUNCTION        reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    VARIABLE        reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    IF              reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    ECHO            reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    NUMBER          reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    STRING          reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    BOOLEAN         reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    NULL            reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    IDENTIFIER      reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    $end            reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)
    CLOSE_CURLY_BRACKET reduce using rule 38 (if_statement -> IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list .)


state 90

    (13) body_statement_list -> OPEN_CURLY_BRACKET . statement_list CLOSE_CURLY_BRACKET
    (14) body_statement_list -> OPEN_CURLY_BRACKET . empty CLOSE_CURLY_BRACKET
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (23) empty -> .
    (5) statement -> . expression_statement
    (6) statement -> . function_declaration
    (7) statement -> . assignment
    (8) statement -> . if_statement
    (9) statement -> . impresion
    (11) expression_statement -> . expression SEMICOLON
    (12) function_declaration -> . FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list
    (10) assignment -> . VARIABLE EQUALS expression SEMICOLON
    (38) if_statement -> . IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list
    (39) impresion -> . ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    CLOSE_CURLY_BRACKET reduce using rule 23 (empty -> .)
    FUNCTION        shift and go to state 19
    VARIABLE        shift and go to state 25
    IF              shift and go to state 21
    ECHO            shift and go to state 22
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    statement_list                 shift and go to state 95
    empty                          shift and go to state 96
    statement                      shift and go to state 4
    expression_statement           shift and go to state 8
    function_declaration           shift and go to state 9
    assignment                     shift and go to state 10
    if_statement                   shift and go to state 11
    impresion                      shift and go to state 12
    expression                     shift and go to state 24
    function_call                  shift and go to state 18

state 91

    (39) impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .

    FUNCTION        reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    VARIABLE        reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    ECHO            reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    NUMBER          reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    STRING          reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    BOOLEAN         reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    NULL            reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    IDENTIFIER      reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    $end            reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)
    CLOSE_CURLY_BRACKET reduce using rule 39 (impresion -> ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON .)


state 92

    (20) value_parameter_list -> value_parameter_list COMMA value_parameter .

    CLOSE_PARENTHESIS reduce using rule 20 (value_parameter_list -> value_parameter_list COMMA value_parameter .)
    COMMA           reduce using rule 20 (value_parameter_list -> value_parameter_list COMMA value_parameter .)


state 93

    (12) function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .

    FUNCTION        reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    VARIABLE        reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    IF              reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    ECHO            reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    NUMBER          reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    STRING          reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    BOOLEAN         reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    NULL            reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    IDENTIFIER      reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    $end            reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)
    CLOSE_CURLY_BRACKET reduce using rule 12 (function_declaration -> FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list .)


state 94

    (16) parameter_list -> parameter_list COMMA parameter .

    CLOSE_PARENTHESIS reduce using rule 16 (parameter_list -> parameter_list COMMA parameter .)
    COMMA           reduce using rule 16 (parameter_list -> parameter_list COMMA parameter .)


state 95

    (13) body_statement_list -> OPEN_CURLY_BRACKET statement_list . CLOSE_CURLY_BRACKET
    (4) statement_list -> statement_list . statement
    (5) statement -> . expression_statement
    (6) statement -> . function_declaration
    (7) statement -> . assignment
    (8) statement -> . if_statement
    (9) statement -> . impresion
    (11) expression_statement -> . expression SEMICOLON
    (12) function_declaration -> . FUNCTION IDENTIFIER OPEN_PARENTHESIS parameter_list CLOSE_PARENTHESIS body_statement_list
    (10) assignment -> . VARIABLE EQUALS expression SEMICOLON
    (38) if_statement -> . IF OPEN_PARENTHESIS condition CLOSE_PARENTHESIS body_statement_list
    (39) impresion -> . ECHO OPEN_PARENTHESIS value_parameter_list CLOSE_PARENTHESIS SEMICOLON
    (24) expression -> . VARIABLE
    (25) expression -> . NUMBER
    (26) expression -> . STRING
    (27) expression -> . BOOLEAN
    (28) expression -> . NULL
    (29) expression -> . function_call
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression MULTIPLY expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULO expression
    (35) expression -> . expression CONCATENATION expression
    (36) expression -> . expression CONCATENATION_ASSIGNMENT expression
    (37) function_call -> . IDENTIFIER OPEN_PARENTHESIS CLOSE_PARENTHESIS

    CLOSE_CURLY_BRACKET shift and go to state 97
    FUNCTION        shift and go to state 19
    VARIABLE        shift and go to state 25
    IF              shift and go to state 21
    ECHO            shift and go to state 22
    NUMBER          shift and go to state 14
    STRING          shift and go to state 15
    BOOLEAN         shift and go to state 16
    NULL            shift and go to state 17
    IDENTIFIER      shift and go to state 20

    statement                      shift and go to state 23
    expression_statement           shift and go to state 8
    function_declaration           shift and go to state 9
    assignment                     shift and go to state 10
    if_statement                   shift and go to state 11
    impresion                      shift and go to state 12
    expression                     shift and go to state 24
    function_call                  shift and go to state 18

state 96

    (14) body_statement_list -> OPEN_CURLY_BRACKET empty . CLOSE_CURLY_BRACKET

    CLOSE_CURLY_BRACKET shift and go to state 98


state 97

    (13) body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .

    FUNCTION        reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    VARIABLE        reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    IF              reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    ECHO            reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    NUMBER          reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    STRING          reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    BOOLEAN         reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    NULL            reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    IDENTIFIER      reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    $end            reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)
    CLOSE_CURLY_BRACKET reduce using rule 13 (body_statement_list -> OPEN_CURLY_BRACKET statement_list CLOSE_CURLY_BRACKET .)


state 98

    (14) body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .

    FUNCTION        reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    VARIABLE        reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    IF              reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    ECHO            reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    NUMBER          reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    STRING          reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    BOOLEAN         reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    NULL            reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    IDENTIFIER      reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    $end            reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)
    CLOSE_CURLY_BRACKET reduce using rule 14 (body_statement_list -> OPEN_CURLY_BRACKET empty CLOSE_CURLY_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 46 resolved as shift
WARNING: shift/reduce conflict for OR in state 46 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 46 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUALS in state 46 resolved as shift
WARNING: shift/reduce conflict for AND in state 52 resolved as shift
WARNING: shift/reduce conflict for OR in state 52 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 52 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUALS in state 52 resolved as shift
WARNING: shift/reduce conflict for AND in state 54 resolved as shift
WARNING: shift/reduce conflict for OR in state 54 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 54 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 54 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 54 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUALS in state 54 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUALS in state 54 resolved as shift
WARNING: shift/reduce conflict for AND in state 55 resolved as shift
WARNING: shift/reduce conflict for OR in state 55 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 55 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 55 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUALS in state 55 resolved as shift
WARNING: shift/reduce conflict for CLOSE_PARENTHESIS in state 74 resolved as shift
WARNING: shift/reduce conflict for AND in state 74 resolved as shift
WARNING: shift/reduce conflict for OR in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 74 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 74 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUALS in state 74 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 84 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 84 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 84 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 84 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUALS in state 84 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUALS in state 84 resolved as shift
WARNING: shift/reduce conflict for AND in state 86 resolved as shift
WARNING: shift/reduce conflict for OR in state 86 resolved as shift
WARNING: shift/reduce conflict for DOUBLE_EQUALS in state 86 resolved as shift
WARNING: shift/reduce conflict for NOT_EQUALS in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN in state 86 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN in state 86 resolved as shift
WARNING: shift/reduce conflict for GREATER_THAN_OR_EQUALS in state 86 resolved as shift
WARNING: shift/reduce conflict for LESS_THAN_OR_EQUALS in state 86 resolved as shift
