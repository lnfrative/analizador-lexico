import ply.lex as lex
import ply.yacc as yacc

palabras_reservadas = {
    'abstract': 'ABSTRACT',
    'and': 'AND',
    'array': 'ARRAY',
    'as': 'AS',
    'break': 'BREAK',
    'callable': 'CALLABLE',
    'case': 'CASE',
    'catch': 'CATCH',
    'class': 'CLASS',
    'clone': 'CLONE',
    'const': 'CONST',
    'continue': 'CONTINUE',
    'declare': 'DECLARE',
    'default': 'DEFAULT',
    'die': 'DIE',
    'do': 'DO',
    'echo': 'ECHO',
    'else': 'ELSE',
    'elseif': 'ELSEIF',
    'empty': 'EMPTY',
    'enddeclare': 'ENDDECLARE',
    'endfor': 'ENDFOR',
    'endforeach': 'ENDFOREACH',
    'endif': 'ENDIF',
    'endswitch': 'ENDSWITCH',
    'endwhile': 'ENDWHILE',
    'eval': 'EVAL',
    'exit': 'EXIT',
    'extends': 'EXTENDS',
    'final': 'FINAL',
    'finally': 'FINALLY',
}

tokens = (
    'NUMBER',
    'STRING',
    'BOOLEAN',
    'NULL',
    'TRUE',
    'FALSE',
    'IDENTIFIER',
    'VARIABLE',
    'OPEN_TAG',
    'CLOSE_TAG',
    'OPEN_TAG_WITH_ECHO',
    'CLOSE_TAG_WITH_ECHO',
    'OPEN_TAG_WITH_ECHO_NAMED',
    'CLOSE_TAG_WITH_ECHO_NAMED',
    'WHITESPACE',
    'EQUALS',
    'OPEN_PARENTHESIS',
    'CLOSE_PARENTHESIS',
    'OPEN_CURLY_BRACKET',
    'CLOSE_CURLY_BRACKET',
    'OPEN_SQUARE_BRACKET',
    'CLOSE_SQUARE_BRACKET',
    'SEMICOLON',
    'COMMA',
    'COLON',
    'DOUBLE_COLON',
    'DOUBLE_EQUALS',
    'NOT_EQUALS',
    'LESS_THAN',
    'GREATER_THAN',
    'LESS_THAN_OR_EQUALS',
    'GREATER_THAN_OR_EQUALS',
    'PLUS',
)

tokens = tokens + tuple(palabras_reservadas.values())